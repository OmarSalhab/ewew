# Activation Wrapper Script
$activationKey = "UC-KEY-1"

# Server endpoints (replace with your actual server URL)
$baseUrl = "http://your-server-address:5000/api/validate-key"
$validationUrl = "$baseUrl`?key=$activationKey"

# First check if key exists
try {
    $checkResponse = Invoke-WebRequest -Uri $validationUrl -Method Get
    $status = $checkResponse.Content.Trim()
    
    if ($status -eq "invalid") {
        Write-Host "ERROR: This activation key has already been used. Activation aborted."
        exit 1
    }
}
catch {
    Write-Host "Failed to validate activation key. Error: $_"
    exit 1
}

# If key is valid, register it before proceeding
try {
    $registerResponse = Invoke-WebRequest -Uri $validationUrl -Method Post
    if ($registerResponse.Content.Trim() -ne "success") {
        throw "Failed to register activation key"
    }
}
catch {
    Write-Host "ERROR: Could not register activation key. Error: $_"
    exit 1
}

# Proceed with activation
try {
    $tempFile = [System.IO.Path]::GetTempFileName() + ".bat"
    Invoke-WebRequest -Uri "https://raw.githubusercontent.com/massgravel/Microsoft-Activation-Scripts/refs/heads/master/MAS/Separate-Files-Version/Activators/Ohook_Activation_AIO.cmd" -OutFile $tempFile
    
    # Run activation script
    Write-Host "Starting activation process..."
    $activationResult = cmd.exe /c $tempFile 2>&1
    $exitCode = $LASTEXITCODE

    if ($exitCode -eq 0) {
        Write-Host "Activation completed successfully!"
    }
    else {
        Write-Host "Activation process failed. Error code: $exitCode"
        Write-Host "Error details: $activationResult"
    }
}
catch {
    Write-Host "Activation process failed: $_"
    exit 1
}
finally {
    # Clean up temporary file
    if (Test-Path $tempFile) {
        Remove-Item $tempFile -Force
    }
}
